plugins {
    id 'com.android.application'

}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    generateStubs = true
}
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.2"

    defaultConfig {
        applicationId "com.lee.galleryloader"
        minSdkVersion 16
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 28

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def buildTypeName = ""
            def fileName = ""
            if (variant.buildType.name == "release") {
                buildTypeName = "release"
                fileName = "${variant.productFlavors[0].name}" + "_time${releaseTime()}_${gitCommit()}_${buildTypeName}.apk"
//                output.outputFile = new File(outputFile.parent, fileName)
                outputFileName = fileName
            } else if (variant.buildType.name == "debug") {
                buildTypeName = "test"
                fileName = "${variant.productFlavors[0].name}" + "_time${releaseTime()}_${gitCommit()}_${buildTypeName}.apk"
//                output.outputFile = new File(outputFile.parent, fileName)
                outputFileName = fileName
            }


        }
    }
    flavorDimensions("app", "version")
    productFlavors {
//        _all {
//            dimension "manufacturer"
//        }
        product1 {
            dimension "app"
            applicationId "com.lee.galleryloader"
            versionCode getVersionCode()
            resValue "string", "app_use_name", appName(true)

            buildConfigField "int", "customType", "0"

        }

        product2 {
            dimension "app"
            applicationId "com.lee.galleryloader"
            versionCode getVersionCode()
            resValue "string", "app_use_name", appName(false)

            buildConfigField "int", "customType", "2"

        }
        _21100_26 {
            targetSdkVersion 26
            versionName getVersionName()
            dimension "version"
        }
    }
}

static def appName(boolean self) {
    return selfName(self)
}

static def getVersionName() {
    return "1.0.0"
}

static int getVersionCode() {
    return 1000
}

static def selfName(boolean self) {
    if (self) {
        return "Test1"
    } else {
        return "Test2"
    }
}

def gitVersion() {
    def gitBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()
    def gitVersion = 'git rev-parse --short HEAD'.execute().text.trim()
    return "\"" + gitBranch + "_" + gitVersion + "\""
}

def gitCommit() {
    def gitVersion = 'git rev-parse --short HEAD'.execute().text.trim()
    return gitVersion
}

def releaseTime() {
    return new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+8:00"))
}

def releaseTimeString() {
    def time = new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+8:00"))
    return "\"" + time + "\""
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation project(path: ':albumloader')


    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4"
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
}